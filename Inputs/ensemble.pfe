#!/bin/csh

#PBS -S /bin/csh
#PBS -N ENSEMBLE

#PBS -q long
#PBS -l walltime=48:00:00

#! PBS -q devel
#! PBS -l walltime=2:00:00

# To run on different type of CPU cores. 1200 cores together
### PBS -l select=75:ncpus=16:model=san
#PBS -l select=60:ncpus=20:model=ivy
### PBS -l select=50:ncpus=24:model=has
### PBS -l select=45:ncpus=28:model=bro
### PBS -l select=45:ncpus=28:model=bro_ele
### PBS -l select=30:ncpus=40:model=sky_ele
### PBS -l select=30:ncpus=40:model=cas_ait

# Combine STDOUT and STDERR
#PBS -j oe

# Send email if something happens
#PBS -m abe

# Specify group (uses default group if not specified):
#PBS -W group_list=s6176

# Make sure other jobs submitted with qsub.*.pl get killed before doing much
sleep 20

setenv EVENT Event01

# cd into the directory above the run?/Event* directories
cd $PBS_O_WORKDIR

# Split the node file among the ensemble members
mkdir -p run/${EVENT}
../Scripts/SplitNodeFile.pl $PBS_NODEFILE run?/${EVENT} >& run/${EVENT}/runlog
setenv PBS_NODEFILE ./hosts

# Run the ensemble until fully done
while (! -f run/${EVENT}/LAST)
    ../Scripts/AssimilateDst.pl -v -s=60 ${EVENT} >>& run/${EVENT}/runlog
    (cd run1/${EVENT}; mpiexec SWMF.exe >& runlog.`date +%y%m%d_%H%M%S`) &
    (cd run2/${EVENT}; mpiexec SWMF.exe >& runlog.`date +%y%m%d_%H%M%S`) &
    (cd run3/${EVENT}; mpiexec SWMF.exe >& runlog.`date +%y%m%d_%H%M%S`) &
    (cd run4/${EVENT}; mpiexec SWMF.exe >& runlog.`date +%y%m%d_%H%M%S`) &
    (cd run5/${EVENT}; mpiexec SWMF.exe >& runlog.`date +%y%m%d_%H%M%S`) &
    wait
end

touch run/${EVENT}/DONE

echo "Finished" >> run/${EVENT}/runlog

exit
